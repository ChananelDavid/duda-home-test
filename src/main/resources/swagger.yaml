swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/"

schemes:
  - "http"

paths:
  /:
    get:
      summary: "get a map"
      description: ""
      consumes:
        - "text/html"
      produces:
        - "text/html"
      responses:
        200:
          description: OK
  /map-data:
    get:
      summary: "get map layer data"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: OK

  /pupil:
    post:
      summary: "Add a new pet to the store"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Pet object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Pupil"
      responses:
        201:
          schema:
            type: integer
            format: int64
          description: "OK"
        405:
          description: "Invalid input"

  /school:
    post:
      summary: "Add a new pet to the store"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Pet object that needs to be added to the store"
          required: true
          schema:
            $ref: '#/definitions/School'
      responses:
        201:
          schema:
            type: integer
            format: int64
          description: "OK"
        405:
          description: "Invalid input"
  /setFriendShip/{firstPupilId}/{secondPupilId}:
    post:
      summary: "Add a new pet to the store"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "firstPupilId"
          in: "path"
          description: "ID of pet to return"
          required: true
          type: "integer"
          format: "int64"
        - name: "secondPupilId"
          in: "path"
          description: "ID of pet to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: OK
  /enroll/{pupilId}:
    post:
      summary: "Add a new pet to the store"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "pupilId"
          in: "path"
          description: "ID of pet to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: OK

definitions:
  Pupil:
    type: object
    properties:
      Lat:
        type: number
        format: double
      Lon:
        type: number
        format: double
      Grades:
        $ref: "#/definitions/Grade"

  Grade:
    type: object
    properties:
      couseName:
        type: string
      grade:
        type: integer

  School:
    type: object
    properties:
      Lat:
        type: number
        format: double
      Lon:
        type: number
        format: double
      minimumGpa:
        type: integer
      maxNumberOfPupils:
        type: integer
  
    